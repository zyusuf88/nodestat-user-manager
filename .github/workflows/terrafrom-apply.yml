name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      confirm_plan:
        description: "Would you like to proceed with a Terraform apply?"
        required: true
        type: string

permissions:
  contents: read

jobs:
  terraform_apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_plan == 'yes'

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=${{ secrets.TERRAFORM_STATE_KEY }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="encrypt=true"

      - name: Download Terraform Plan from s3
        run: |
          aws s3 cp s3://${{ secrets.TERRAFORM_STATE_BUCKET }}/tfplan tfplan

      - name: Clean up tfplan from S3
        if: always()
        run: |
          aws s3 rm s3://${{ secrets.TERRAFORM_STATE_BUCKET }}/tfplan

      - name: Terraform Apply
        run: terraform apply -input=false tfplan

      - name: Upload SQL file to S3 to trigger Lambda
        run: |
          aws s3 cp ./terraform/modules/lambda/init-users.sql s3://${{ secrets.LAMBDA_SQL_BUCKET }}/init-users.sql
