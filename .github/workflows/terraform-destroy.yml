name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm destruction'
        required: true
        type: string
      container_image:
        description: "Full ECR image URI with tag"
        required: true
        type: string

permissions:
  contents: read
  actions: write

jobs:
  alb_destroy:
    name: "Destroy ALB"
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'destroy'

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=${{ secrets.TERRAFORM_STATE_KEY }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="encrypt=true"

      - name: Refresh Terraform State
        run: |
          terraform refresh \
          -var="domain_name=${{ vars.DOMAIN_NAME }}" \
          -var="project_name=${{ vars.PROJECT_NAME }}" \
          -var="record_name=${{ vars.RECORD_NAME }}" \
          -var="task_role_arn=${{ secrets.TASK_ROLE_ARN }}" \
          -var="execution_role_arn=${{ secrets.EXECUTION_ROLE_ARN }}" \
          -var="container_image=${{ github.event.inputs.container_image }}"\
          -var="db_name=${{ vars.DB_NAME }}" \
          -var="s3_bucket_name=${{ vars.S3_BUCKET_NAME }}" \
          -var="db_identifier=${{ vars.DB_IDENTIFIER }}" \
          -var="ssm_parameter_access=${{ secrets.SSM_PARAMETER_ACCESS }}" \
          -var="db_username=${{ secrets.DB_USERNAME }}" \
          -var="db_password=${{ secrets.DB_PASSWORD }}" \
          -var="db_host=${{ secrets.DB_HOST }}" \
          -var="db_secret_name=${{ secrets.DB_SECRET_NAME }}" \
          -var="seeder_container=${{ env.SEEDER_CONTAINER }}" 

      - name: Terraform Destroy ALB
        run: |
          terraform destroy \
            -target="module.alb.aws_lb.this" \
            -var="domain_name=${{ vars.DOMAIN_NAME }}" \
            -var="project_name=${{ vars.PROJECT_NAME }}" \
            -var="record_name=${{ vars.RECORD_NAME }}" \
            -var="task_role_arn=${{ secrets.TASK_ROLE_ARN }}" \
            -var="execution_role_arn=${{ secrets.EXECUTION_ROLE_ARN }}" \
            -var="container_image=${{ github.event.inputs.container_image }}" \
            -var="db_name=${{ vars.DB_NAME }}" \
            -var="s3_bucket_name=${{ vars.S3_BUCKET_NAME }}" \
            -var="db_identifier=${{ vars.DB_IDENTIFIER }}" \
            -var="ssm_parameter_access=${{ secrets.SSM_PARAMETER_ACCESS }}" \
            -var="db_username=${{ secrets.DB_USERNAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="db_host=${{ secrets.DB_HOST }}" \
            -var="db_secret_name=${{ secrets.DB_SECRET_NAME }}" \
            -var="seeder_container=${{ vars.SEEDER_CONTAINER }}" 
            -auto-approve

  full_destroy:
    name: "Full destroy"
    runs-on: ubuntu-latest
    needs: alb_destroy
    if: github.event.inputs.confirm_destroy == 'destroy'

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=${{ secrets.TERRAFORM_STATE_KEY }}" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="encrypt=true"

      - name: Terraform Full Destroy
        run: |
          terraform destroy \
            -var="domain_name=${{ vars.DOMAIN_NAME }}" \
            -var="project_name=${{ vars.PROJECT_NAME }}" \
            -var="record_name=${{ vars.RECORD_NAME }}" \
            -var="task_role_arn=${{ secrets.TASK_ROLE_ARN }}" \
            -var="execution_role_arn=${{ secrets.EXECUTION_ROLE_ARN }}" \
            -var="container_image=${{ github.event.inputs.container_image }}" \
            -var="db_name=${{ vars.DB_NAME }}" \
            -var="s3_bucket_name=${{ vars.S3_BUCKET_NAME }}" \
            -var="db_identifier=${{ vars.DB_IDENTIFIER }}" \
            -var="ssm_parameter_access=${{ secrets.SSM_PARAMETER_ACCESS }}" \
            -var="db_username=${{ secrets.DB_USERNAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="db_host=${{ secrets.DB_HOST }}" \
            -var="db_secret_name=${{ secrets.DB_SECRET_NAME }}" \
            -var="seeder_container=${{ vars.SEEDER_CONTAINER }}" 
            -auto-approve

  delete_ecr_images:
    name: "Delete ECR Images"
    runs-on: ubuntu-latest
    needs: full_destroy
    if: github.event.inputs.confirm_destroy == 'destroy'

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Delete ECR Images
        run: |
          TAG=$(echo "${{ github.event.inputs.container_image }}" | cut -d':' -f2)
          REPO=$(echo "${{ github.event.inputs.container_image }}" | cut -d'/' -f2 | cut -d':' -f1)
          aws ecr batch-delete-image --repository-name $REPO --image-ids imageTag=$TAG
